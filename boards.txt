##################################################################################################
## This file is created by MCUdude for use with MightyCore                                      ##
## https://github.com/MCUdude/MightyCore                                                        ##
##                                                                                              ##
## This is the file where fuse settings, clock frequencies, bootloaders and compiler flags are  ##
## located.                                                                                     ##
##                                                                                              ##
## You may change the upload serial port by modifying the upload.port field. Note that          ##
## ATmega8535/16/32 only has one serial port (UART0), so changing this field will not work for  ##
## these devices. However, ATmega164/324/644/1284 all have two serial ports (UART0, UART1).     ##
## Modify the upload.port to change serial port for these devices.                              ##
##                                                                                              ##
## The table below shows the available precompiled bootloaders for the corresponding clock      ##
## frequencies and baud rates. Modify the upload.speed field to change baud rate.               ##
##                                                                                              ##
## |             | 1000000 | 500000 | 250000 | 230400 | 115200 | 57600 | 38400 | 19200 | 9600 | ##
## |-------------|---------|--------|--------|--------|--------|-------|-------|-------|------| ##
## | 20 MHz      |         |  X     |  X     |        |  X     |       |       |  X    |      | ##
## | 18.4320 MHz |         |        |        |  X     |  X     |  X    |  X    |  X    |  X   | ##
## | 16 MHz      |  X      |  X     |  X     |        |  X     |       |  X    |  X    |  X   | ##
## | 14.7456 MHz |         |        |        |  X     |  X     |  X    |  X    |  X    |  X   | ## 
## | 12 MHz      |         |  X     |  X     |        |        |  X    |       |  X    |  X   | ##
## | 11.0592 MHz |         |        |        |  X     |  X     |  X    |  X    |  X    |  X   | ## 
## | 8 MHz       |  X      |  X     |  X     |        |  X     |  X    |  X    |  X    |  X   | ##
## | 7.3728 MHz  |         |        |        |  X     |  X     |  X    |  X    |  X    |  X   | ## 
## | 4 MHz       |         |  X     |  X     |        |        |       |       |  X    |  X   | ##
## | 3.6864 MHz  |         |        |        |  X     |  X     |  X    |  X    |  X    |  X   | ## 
## | 2 MHz       |         |        |  X     |        |        |       |       |  X    |  X   | ##
## | 1.8432 MHz  |         |        |        |  X     |  X     |  X    |  X    |  X    |  X   | ## 
## | 1 MHz       |         |        |        |        |        |       |       |       |  X   | ## 
##                                                                                              ##
##################################################################################################


# Menu options
menu.clock=Clock
menu.BOD=BOD(set to 2.7)
menu.pinout=Pinout(use Bobduino)
menu.variant=Variant
menu.LTO=Compiler LTO


######################
#### ATmega1284/P ####
######################

1284.name=c't bot with ATmega1284
1284.upload.tool=avrdude
1284.upload.protocol=arduino
1284.upload.maximum_size=130048
1284.upload.maximum_data_size=16384

1284.bootloader.tool=avrdude
1284.bootloader.unlock_bits=0x3f
1284.bootloader.lock_bits=0x0f

1284.build.core=MCUdude_corefiles
1284.build.board=AVR_ATmega1284

# Pinouts
1284.menu.pinout.standard=Standard
1284.menu.pinout.standard.build.variant=standard

# Variants
1284.menu.variant.modelP=1284P
1284.menu.variant.modelP.build.mcu=atmega1284p
1284.menu.variant.modelNonP=1284
1284.menu.variant.modelNonP.build.mcu=atmega1284

# Brown out detection
1284.menu.BOD.2v7=2.7v
1284.menu.BOD.2v7.bootloader.extended_fuses=0xfd
1284.menu.BOD.4v3=4.3v
1284.menu.BOD.4v3.bootloader.extended_fuses=0xfc
1284.menu.BOD.1v8=1.8v
1284.menu.BOD.1v8.bootloader.extended_fuses=0xfe
1284.menu.BOD.disabled=Disabled
1284.menu.BOD.disabled.bootloader.extended_fuses=0xff

# Compiler link time optimization
1284.menu.LTO.Os=Disabled (default)
1284.menu.LTO.Os.compiler.c.extra_flags=
1284.menu.LTO.Os.compiler.c.elf.extra_flags=
1284.menu.LTO.Os.compiler.cpp.extra_flags=
1284.menu.LTO.Os.ltoarcmd=avr-ar

1284.menu.LTO.Os_flto=Enabled
1284.menu.LTO.Os_flto.compiler.c.extra_flags=-Wextra -flto
1284.menu.LTO.Os_flto.compiler.c.elf.extra_flags=-w -flto
1284.menu.LTO.Os_flto.compiler.cpp.extra_flags=-Wextra -flto
1284.menu.LTO.Os_flto.ltoarcmd=avr-gcc-ar

# Clock frequencies
1284.menu.clock.16MHz_external=16 MHz external
1284.menu.clock.16MHz_external.upload.port=UART0
1284.menu.clock.16MHz_external.upload.speed=115200
1284.menu.clock.16MHz_external.bootloader.low_fuses=0xf7
1284.menu.clock.16MHz_external.bootloader.high_fuses=0xd6
1284.menu.clock.16MHz_external.bootloader.file=optiboot_flash/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex
1284.menu.clock.16MHz_external.build.f_cpu=16000000L

1284.menu.clock.8MHz_internal=8 MHz internal
1284.menu.clock.8MHz_internal.upload.port=UART0
1284.menu.clock.8MHz_internal.upload.speed=38400
1284.menu.clock.8MHz_internal.bootloader.low_fuses=0xe2
1284.menu.clock.8MHz_internal.bootloader.high_fuses=0xd6
1284.menu.clock.8MHz_internal.bootloader.file=optiboot_flash/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex
1284.menu.clock.8MHz_internal.build.f_cpu=8000000L



###########################
#### ATmega644/A/P/PA  ####
###########################

644.name=c't bot with ATmega644
644.upload.tool=avrdude
644.upload.protocol=arduino
644.upload.maximum_size=64512
644.upload.maximum_data_size=4096

644.bootloader.tool=avrdude
644.bootloader.unlock_bits=0x3f
644.bootloader.lock_bits=0x0f

644.build.core=MCUdude_corefiles
644.build.board=AVR_ATmega644

# Pinouts
644.menu.pinout.standard=Standard
644.menu.pinout.standard.build.variant=standard

# Variants
644.menu.variant.modelP=644P / 644PA
644.menu.variant.modelP.build.mcu=atmega644p
644.menu.variant.modelA=644 / 644A
644.menu.variant.modelA.build.mcu=atmega644

# Brown out detection
644.menu.BOD.2v7=2.7v
644.menu.BOD.2v7.bootloader.extended_fuses=0xfb
644.menu.BOD.4v3=4.3v
644.menu.BOD.4v3.bootloader.extended_fuses=0xf9
644.menu.BOD.1v8=1.8v
644.menu.BOD.1v8.bootloader.extended_fuses=0xfd
644.menu.BOD.disabled=Disabled
644.menu.BOD.disabled.bootloader.extended_fuses=0xff

# Compiler link time optimization
644.menu.LTO.Os=Disabled (default)
644.menu.LTO.Os.compiler.c.extra_flags=
644.menu.LTO.Os.compiler.c.elf.extra_flags=
644.menu.LTO.Os.compiler.cpp.extra_flags=
644.menu.LTO.Os.ltoarcmd=avr-ar

644.menu.LTO.Os_flto=Enabled
644.menu.LTO.Os_flto.compiler.c.extra_flags=-Wextra -flto
644.menu.LTO.Os_flto.compiler.c.elf.extra_flags=-w -flto
644.menu.LTO.Os_flto.compiler.cpp.extra_flags=-Wextra -flto
644.menu.LTO.Os_flto.ltoarcmd=avr-gcc-ar

# Clock frequencies
644.menu.clock.16MHz_external=16 MHz external
644.menu.clock.16MHz_external.upload.port=UART0
644.menu.clock.16MHz_external.upload.speed=115200
644.menu.clock.16MHz_external.bootloader.low_fuses=0xf7
644.menu.clock.16MHz_external.bootloader.high_fuses=0xd6
644.menu.clock.16MHz_external.bootloader.file=optiboot_flash/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex
644.menu.clock.16MHz_external.build.f_cpu=16000000L

644.menu.clock.8MHz_internal=8 MHz internal
644.menu.clock.8MHz_internal.upload.port=UART0
644.menu.clock.8MHz_internal.upload.speed=38400
644.menu.clock.8MHz_internal.bootloader.low_fuses=0xe2
644.menu.clock.8MHz_internal.bootloader.high_fuses=0xd6
644.menu.clock.8MHz_internal.bootloader.file=optiboot_flash/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex
644.menu.clock.8MHz_internal.build.f_cpu=8000000L